#############################################################################
# Makefile for building: klog
# Generated by qmake (2.01a) (Qt 4.5.0) on: Tue Sep 29 08:21:59 2009
# Project:  klog.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile klog.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lkdecore -lhamlib -lkdeui -lQtGui -lQtNetwork -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = adif.cpp \
		award.cpp \
		awarddxcc.cpp \
		awardiota.cpp \
		awards.cpp \
		awardwaz.cpp \
		cabrillomanagement.cpp \
		calls.cpp \
		dxspot.cpp \
		entity.cpp \
		klog.cpp \
		kloghamlib.cpp \
		locator.cpp \
		main.cpp \
		prefix.cpp \
		qso.cpp \
		reference.cpp \
		setup.cpp \
		workedcalls.cpp \
		world.cpp moc_klog.cpp \
		moc_setup.cpp
OBJECTS       = adif.o \
		award.o \
		awarddxcc.o \
		awardiota.o \
		awards.o \
		awardwaz.o \
		cabrillomanagement.o \
		calls.o \
		dxspot.o \
		entity.o \
		klog.o \
		kloghamlib.o \
		locator.o \
		main.o \
		prefix.o \
		qso.o \
		reference.o \
		setup.o \
		workedcalls.o \
		world.o \
		moc_klog.o \
		moc_setup.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		klog.pro
QMAKE_TARGET  = klog
DESTDIR       = 
TARGET        = klog

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_klog.h ui_setup.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: klog.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile klog.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile klog.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/klog1.0.0 || $(MKDIR) .tmp/klog1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/klog1.0.0/ && $(COPY_FILE) --parents adif.h award.h awarddxcc.h awardiota.h awards.h awardwaz.h cabrillomanagement.h calls.h dxspot.h entity.h klog.h kloghamlib.h locator.h prefix.h qso.h reference.h setup.h workedcalls.h world.h .tmp/klog1.0.0/ && $(COPY_FILE) --parents adif.cpp award.cpp awarddxcc.cpp awardiota.cpp awards.cpp awardwaz.cpp cabrillomanagement.cpp calls.cpp dxspot.cpp entity.cpp klog.cpp kloghamlib.cpp locator.cpp main.cpp prefix.cpp qso.cpp reference.cpp setup.cpp workedcalls.cpp world.cpp .tmp/klog1.0.0/ && $(COPY_FILE) --parents klog.ui setup.ui .tmp/klog1.0.0/ && (cd `dirname .tmp/klog1.0.0` && $(TAR) klog1.0.0.tar klog1.0.0 && $(COMPRESS) klog1.0.0.tar) && $(MOVE) `dirname .tmp/klog1.0.0`/klog1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/klog1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_klog.cpp moc_setup.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_klog.cpp moc_setup.cpp
moc_klog.cpp: ui_klog.h \
		awarddxcc.h \
		adif.h \
		awardwaz.h \
		qso.h \
		calls.h \
		world.h \
		entity.h \
		prefix.h \
		locator.h \
		setup.h \
		kloghamlib.h \
		ui_setup.h \
		award.h \
		reference.h \
		awards.h \
		workedcalls.h \
		cabrillomanagement.h \
		klog.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) klog.h -o moc_klog.cpp

moc_setup.cpp: kloghamlib.h \
		ui_setup.h \
		award.h \
		reference.h \
		awards.h \
		world.h \
		entity.h \
		prefix.h \
		setup.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) setup.h -o moc_setup.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_klog.h ui_setup.h
compiler_uic_clean:
	-$(DEL_FILE) ui_klog.h ui_setup.h
ui_klog.h: klog.ui
	/usr/bin/uic-qt4 klog.ui -o ui_klog.h

ui_setup.h: setup.ui
	/usr/bin/uic-qt4 setup.ui -o ui_setup.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

adif.o: adif.cpp adif.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o adif.o adif.cpp

award.o: award.cpp award.h \
		reference.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o award.o award.cpp

awarddxcc.o: awarddxcc.cpp awarddxcc.h \
		adif.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o awarddxcc.o awarddxcc.cpp

awardiota.o: awardiota.cpp awardiota.h \
		adif.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o awardiota.o awardiota.cpp

awards.o: awards.cpp awards.h \
		world.h \
		entity.h \
		prefix.h \
		reference.h \
		award.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o awards.o awards.cpp

awardwaz.o: awardwaz.cpp awardwaz.h \
		adif.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o awardwaz.o awardwaz.cpp

cabrillomanagement.o: cabrillomanagement.cpp cabrillomanagement.h \
		qso.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cabrillomanagement.o cabrillomanagement.cpp

calls.o: calls.cpp calls.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o calls.o calls.cpp

dxspot.o: dxspot.cpp dxspot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dxspot.o dxspot.cpp

entity.o: entity.cpp entity.h \
		prefix.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o entity.o entity.cpp

klog.o: klog.cpp klog.h \
		ui_klog.h \
		awarddxcc.h \
		adif.h \
		awardwaz.h \
		qso.h \
		calls.h \
		world.h \
		entity.h \
		prefix.h \
		locator.h \
		setup.h \
		kloghamlib.h \
		ui_setup.h \
		award.h \
		reference.h \
		awards.h \
		workedcalls.h \
		cabrillomanagement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o klog.o klog.cpp

kloghamlib.o: kloghamlib.cpp kloghamlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o kloghamlib.o kloghamlib.cpp

locator.o: locator.cpp locator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o locator.o locator.cpp

main.o: main.cpp klog.h \
		ui_klog.h \
		awarddxcc.h \
		adif.h \
		awardwaz.h \
		qso.h \
		calls.h \
		world.h \
		entity.h \
		prefix.h \
		locator.h \
		setup.h \
		kloghamlib.h \
		ui_setup.h \
		award.h \
		reference.h \
		awards.h \
		workedcalls.h \
		cabrillomanagement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

prefix.o: prefix.cpp prefix.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o prefix.o prefix.cpp

qso.o: qso.cpp qso.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qso.o qso.cpp

reference.o: reference.cpp reference.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reference.o reference.cpp

setup.o: setup.cpp setup.h \
		kloghamlib.h \
		ui_setup.h \
		award.h \
		reference.h \
		awards.h \
		world.h \
		entity.h \
		prefix.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setup.o setup.cpp

workedcalls.o: workedcalls.cpp workedcalls.h \
		calls.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o workedcalls.o workedcalls.cpp

world.o: world.cpp world.h \
		entity.h \
		prefix.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o world.o world.cpp

moc_klog.o: moc_klog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_klog.o moc_klog.cpp

moc_setup.o: moc_setup.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_setup.o moc_setup.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

